Update READMEs with my pitch

SERVERLESS
----------
1. Needs to handle cookies with the same logic as the BFF Plugin
   If no token then process AT and CSRF cookies
   Consider a bash script to run lambdas

ERRORS
------
1. Make encryption and decryption fail and verify error logs
   Use HTTP workflow, or lambda workflow with api.log file

2. API 500s and API log output to handle better when running lambda tests

3. API logs to handle separate error details for service and client
   Distinct codes in the service, single code for the client

4. Return 401s to the SPA rather than individual 400s and error codes
   Client should not need to read error codes

5. Ensure that BFF PLUGIN errors can be handled by the SPA, as 401s
   Capture errors but aim to prevent needing to read them

FIRST MILESTONE
---------------
1. Update cloud from branches

2. Once working do the merges down and ensure READMEs are good

3. Blog updated and sample instructions still work
   Get rid of my BFF code but mention expiry testing and custom logging

CODE CONSOLIDATION
------------------
1. package.json updates for latest Typescript, Serverless

2. Get rid of tunnel-agent, as for websample1.NEW and check HTTP proxy still works

3. Java and .Net Core final APIs to set credentials: true in their CORS options

4. Also have a local APIs setup where the Token Handler runs on port 446

5. Bug in plugin:
   https://github.com/curityio/kong-bff-plugin/blob/master/plugin/access.lua#L104

6. Deal with expire errors in the UI and clearing them once working again

7. Test on Windows

LOCAL DEVELOPMENT
-----------------

BLOG
----
1. Refer to Curity for security solution

2. Landscape is either simpler setup via ASP.Net / Spring Boot but with many follow on issues.
   Or separation and a trickier developer setup.
   Mention that cookies add complexity.

3. Mention that the goal is a productive developer setup and we will show some techniques.

