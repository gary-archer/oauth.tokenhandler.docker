SERVERLESS
----------
1. Update default setup to use business API at https://api.authsamples.com
   This should work but I get a gateway 401 that needs debugging
   This will probably be something related to cookie dependencies

2. SPA expected to be slow since lambda caching will not work
   This is a blocking issue, since I cannot cache anything in the lambdas themselves

MERGES
------
1. Above work done and cloud system works and works on Windows
   Then update blog quickly and trim it down

2. Final APIs run locally and kong.yml can be updated at deployment time with API URL
   Java and .Net Core final APIs to set credentials: true in their CORS options
   - First run the API
   - Then run the SPA with './deploy.sh localapi' which should run this repo with './deploy.sh localapi'

3. Also add a way to run the Token Handler API outside of Docker

ERRORS
------
1. Client should not need to read token handler error codes and should just deal with 401s
   Return 401s to the SPA and a generic unauthorized error code
   Ensure that BFF PLUGIN errors (code and message) are reported correctly by the SPA

2. API logs to handle separate error details for service and client
   Distinct codes in the service, single code for the client

3. Serverless error logging to a server code used in logs and a generic client code

4. Lessons learned from WebSample1 / End-to-End / SPA revamp consolidated
   End to end Docker to get working again

5. Better error codes and responses for CSRF conditions in Serverless API
   Same server / client logging differences as above

INCREMENTAL
-----------
1. Use jose in NodeJS APIs

2. SPAs to do DOM updates as for sample1.NEW

3. Get rid of url-parse

4. Get rid of tunnel-agent, as for websample1.NEW and check HTTP proxy still works

UI CONSOLIDATION
----------------
1. Deal with expire errors in the UI and clearing them once working again

BLOG
----
1. Refer to Curity for security solution
   Blog post theme should be productive developer setup techniques.

2. Landscape is either simpler setup via ASP.Net / Spring Boot but with many follow on issues.
   Cookies add a lot of complexity and Docker is the best you can do, though separation it tricky.

3. Discuss details of where logs go, eg on npm run lambda

4. More about running the components after initial run of build script
   Stress standard node - eg do a 'npm start' to restart

CURITY
------
1. Bug in plugin:
   https://github.com/curityio/kong-bff-plugin/blob/master/plugin/access.lua#L104

2. Make sure web and token handler repos point nicely to docs as part of image updates