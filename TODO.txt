SPA
---
1. Use /token-handler in the SPA and get it basically working
   Ensure that BFF PLUGIN errors can be handled by the SPA, as 401s
   Capture errors but aim to prevent needing to read them

DEPLOYMENT CONSOLIDATION
------------------------
1. Use out of the box BFF-PLUGIN and delete files from my repo

2. Make the Token Handler API run as a Docker container
   Also have a local APIs setup where the Token Handler runs on port 446

ERRORS
------
1. Make encryption fail and decryption fail and verify error logs

2. API 500s and API log output to handle better when running lambda tests
   Decide some future behaviour, then get rid of this in logEntry.setServerError:
   - console.error(this._data.errorData);

3. API logs to handle separate error details for service and client
   Distinct codes in the service, single code for the client

4. Return 401s to the SPA rather than individual 400s and error codes
   Client should not need to read error codes

SERVERLESS
----------
1. Needs to handle cookies with the same logic as the BFF Plugin
   If no token then process AT and CSRF cookies

FIRST MILESTONE
---------------
1. Update cloud from branch

2. Once working do the merges down and ensure READMEs are good

3. Blog updated and sample instructions still work
   Get rid of my BFF code but mention expiry testing and custom logging

CODE CONSOLIDATION
------------------
1. Use out of the box BFF-PLUGIN and delete files from my repo

2. package.json updates for latest Typescript, Serverless

3. Get rid of tunnel-agent, as for websample1.NEW and check HTTP proxy still works

4. All final APIs to set credentials: true in their CORS options