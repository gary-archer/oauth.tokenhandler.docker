CODE CONSOLIDATION
------------------
1. Get end to end lambda scripts running - up to around line 224
   See if there is scope for making this more resilient and supporting console.log statements

2. Private cookie paths of /token-handler for state, ID and refresh tokens which never need to be sent to other paths.

3. Put back https://github.com/ebourmalo/cookie-encrypter from main branch
   See if encryption is compatible with Michal's
   If so then use the Curity BFF plugin and get rid of my extension

4. Error responses need improving:
   - Simpler client side error codes and error code checking, along with status 401 (SPA does not use invalid_grant)
   - More separated side error codes that are used for query purposes

SPA
---
Update the automation to use the Token Handler API and to call Docker

MILESTONES
----------
1. SPA works locally with token handler API and plugin running in Docker on port 444
   Initial plan on updating APIs to port 446 and running Token Handler API on port 445

2. Serverless project updated to handle secure cookies, similar to a reverse proxy plugin
   Use a single lambda authorizer to reduce incompatibilities.

3. Cloud system updated and SPA redeployed from branch

4. Code merged for final SPA and token handler API, and repo renamed to oauth.tokenhandlerapi

5. Blog updated and sample instructions still work

BLOG
----
1. Get first part of blog updated and say I am using the Curity design pattern, linking to the SPA repo.
   Mention my own token handler that allows me to test expiry and do custom logging.
   Delete most of my own content in this area so that there is a very short page.
